RapidRuby / LifePath

Custom Rack-based Ruby web framework and LifePath web app.

* Multi-architecture design - currently supports MVC and procedural (direct script based)
* Forms go in apps/forms/*, inherit from Rapid::Form
* Custom syntax for Slim and a DSL for creating form validation
* MVC controllers have access to model loaders: m.foomodel is a lazy loaded instance of a model called "foomodel"
* Controllers and apps have access to slim templating
* Controllers and apps have access to session (lazy loaded). Session tokens are very long and encrypted before sending as cookie
* Session data is in MongoDB
* STDOUT capturing through Buffer class
* MongoDB access. Connections are on-demand and get closed immediately after use
* Lazy input processing
* Apps can define their own "routers", rules that determine when the app wants to process a visitor


Performance notes

* Nested templates through scope object's render have no discernable impact on performance.
* Reading session variables to a page's logic has a significant negative impact, but only the first one.
* Writing session variables also has a negative impact, each one introducing more.
* Transactional interface provided to batch saving session variables, makes the price the same as writing one.